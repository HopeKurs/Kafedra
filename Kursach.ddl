-- Generated by Oracle SQL Developer Data Modeler 4.2.0.917
--   at:        2016-11-29 22:06:52 MSK
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE группы (
    id_группы       INTEGER NOT NULL,
    номергруппы     CHAR(6 CHAR),
    староста        INTEGER NOT NULL,
    профорг         INTEGER NOT NULL,
    студорг         INTEGER NOT NULL,
    номерсеместра   INTEGER
);

ALTER TABLE группы ADD CONSTRAINT группы_pk PRIMARY KEY ( id_группы );

CREATE TABLE деньнедели (
    id           INTEGER NOT NULL,
    деньнедели   VARCHAR2 
--  ERROR: VARCHAR2 size not specified 

);

ALTER TABLE деньнедели ADD CONSTRAINT деньнедели_pk PRIMARY KEY ( id );

CREATE TABLE дисциплины (
    id_дисциплины      INTEGER NOT NULL,
    наименование       CHAR(15),
    кафедрдисциплина   CHAR(1),
    семестрдисц        INTEGER,
    колвочасов         INTEGER
);

ALTER TABLE дисциплины ADD CONSTRAINT предмет_pk PRIMARY KEY ( id_дисциплины );

CREATE TABLE замдекана (
    id_замдекана   INTEGER NOT NULL,
    физлицо        INTEGER NOT NULL,
    курс           INTEGER
);

ALTER TABLE замдекана ADD CONSTRAINT замдекана_pk PRIMARY KEY ( id_замдекана );

CREATE TABLE занятия (
    id_занятия    INTEGER NOT NULL,
    тип           INTEGER NOT NULL,
    учебныйплан   INTEGER NOT NULL
);

ALTER TABLE занятия ADD CONSTRAINT учебныйплан_pkv2 PRIMARY KEY ( id_занятия );

CREATE TABLE кпм (
    id            INTEGER NOT NULL,
    тип           INTEGER NOT NULL,
    максоценка    INTEGER,
    миноценка     INTEGER,
    учплан        INTEGER NOT NULL,
    неделясдачи   INTEGER
);

ALTER TABLE кпм ADD CONSTRAINT кпм_pk PRIMARY KEY ( id );

CREATE TABLE куратор (
    id_куратора   INTEGER NOT NULL,
    группа        INTEGER NOT NULL,
    физлицо       INTEGER NOT NULL
);

ALTER TABLE куратор ADD CONSTRAINT куратор_pk PRIMARY KEY ( id_куратора );

CREATE TABLE нир (
    id_работы      INTEGER NOT NULL,
    дисциплина     INTEGER NOT NULL,
    название       CHAR(30 CHAR),
    рузультат      INTEGER,
    исполнитель    INTEGER NOT NULL,
    руководитель   INTEGER NOT NULL,
    датаначала     DATE,
    датаконца      DATE
);

ALTER TABLE нир ADD CONSTRAINT нир_pk PRIMARY KEY ( id_работы );

CREATE TABLE оценки (
    "id Оценки"     INTEGER NOT NULL,
    оценка          INTEGER,
    студент         INTEGER NOT NULL,
    преподаватель   INTEGER NOT NULL,
    датасдачи       DATE,
    кпм             INTEGER NOT NULL
);

ALTER TABLE оценки ADD CONSTRAINT оценка_pk PRIMARY KEY ( "id Оценки" );

CREATE TABLE пользователи (
    id_пользователя   INTEGER NOT NULL,
    "id _ФизЛица"     INTEGER NOT NULL,
    роль              INTEGER NOT NULL,
    логин             CHAR(20 CHAR),
    пароль            CHAR(20 CHAR)
);

ALTER TABLE пользователи ADD CONSTRAINT пользователи_pk PRIMARY KEY ( id_пользователя );

CREATE TABLE "Посещаемость студентов" (
    id_посещаемости   INTEGER NOT NULL,
    пара              INTEGER NOT NULL,
    дата              DATE,
    студент           INTEGER NOT NULL
);

ALTER TABLE "Посещаемость студентов" ADD CONSTRAINT "Посещаемость студентов_PK" PRIMARY KEY ( id_посещаемости );

CREATE TABLE преподаватель (
    id_преподавателя   INTEGER NOT NULL,
    физлицо            INTEGER NOT NULL,
    ученаястепень      VARCHAR2 
--  ERROR: VARCHAR2 size not specified 

    ,
    ученоезвание       VARCHAR2 
--  ERROR: VARCHAR2 size not specified 

);

ALTER TABLE преподаватель ADD CONSTRAINT преподаватель_pk PRIMARY KEY ( id_преподавателя );

CREATE TABLE приказы (
    id_приказа     INTEGER NOT NULL,
    типприказа     INTEGER NOT NULL,
    номерприказа   INTEGER,
    дата           DATE,
    физлицо        INTEGER NOT NULL,
    утвердил       INTEGER NOT NULL
);

ALTER TABLE приказы ADD CONSTRAINT приказы_pk PRIMARY KEY ( id_приказа );

CREATE TABLE расписание (
    id_пары            INTEGER NOT NULL,
    дисциплина         INTEGER NOT NULL,
    деньнедели         INTEGER NOT NULL,
    преподаватель      INTEGER NOT NULL,
    аудитория          CHAR(5 CHAR),
    числ_знаменатель   CHAR(1),
    группа             INTEGER NOT NULL
);

ALTER TABLE расписание ADD CONSTRAINT расписание_pk PRIMARY KEY ( id_пары );

CREATE TABLE роль (
    id_роли        INTEGER NOT NULL,
    наименование   CHAR(15 CHAR)
);

ALTER TABLE роль ADD CONSTRAINT роль_pk PRIMARY KEY ( id_роли );

CREATE TABLE студент (
    id_студента       INTEGER NOT NULL,
    физлицо           INTEGER NOT NULL,
    группа            INTEGER NOT NULL,
    номерстудбилета   CHAR(6 CHAR),
    номерзачетки      CHAR(6 CHAR),
    датазачисления    DATE,
    датавыпуска       DATE,
    мать              INTEGER NOT NULL,
    отец              INTEGER NOT NULL,
    общежитие         CHAR(1),
    военнаякафедра    CHAR(1),
    стипендия         NUMBER,
    noличногодела     INTEGER
);

ALTER TABLE студент ADD CONSTRAINT студент_pk PRIMARY KEY ( id_студента );

CREATE TABLE типмероприятия (
    id         INTEGER NOT NULL,
    название   VARCHAR2 
--  ERROR: VARCHAR2 size not specified 

);

ALTER TABLE типмероприятия ADD CONSTRAINT типмероприятия_pk PRIMARY KEY ( id );

CREATE TABLE типприказа (
    id    INTEGER NOT NULL,
    тип   CHAR(40)
);

ALTER TABLE типприказа ADD CONSTRAINT типприказа_pk PRIMARY KEY ( id );

CREATE TABLE типызанятий (
    id           INTEGER NOT NULL,
    типзанятия   CHAR(15 CHAR)
);

ALTER TABLE типызанятий ADD CONSTRAINT типзанятия_pk PRIMARY KEY ( id );

CREATE TABLE учебныйплан (
    id_учплана       INTEGER NOT NULL,
    приказ           INTEGER NOT NULL,
    экзамен          CHAR(1),
    дисциплина       INTEGER NOT NULL,
    колволекций      INTEGER,
    колволаб         INTEGER,
    колвосем         INTEGER,
    колвомодулей     INTEGER,
    курсовойпроект   CHAR(1)
);

ALTER TABLE учебныйплан ADD CONSTRAINT учебныйплан_pk PRIMARY KEY ( id_учплана );

CREATE TABLE физлица (
    id_физлица           INTEGER NOT NULL,
    фамилия              CHAR(20 CHAR),
    имя                  CHAR(15 CHAR),
    отчество             CHAR(20 CHAR),
    пол                  CHAR(1 CHAR),
    датарождения         DATE,
    телефон              CHAR(10 CHAR),
    элпочта              CHAR(25 CHAR),
    адресрегистрации     CHAR(30 CHAR),
    адреспроживания      CHAR(30 CHAR),
    номерсерияпаспорта   CHAR(10 CHAR),
    примечание           VARCHAR2 
--  ERROR: VARCHAR2 size not specified 

);

ALTER TABLE физлица ADD CONSTRAINT физлица_pk PRIMARY KEY ( id_физлица );

ALTER TABLE группы ADD CONSTRAINT группы_студент_fk FOREIGN KEY ( староста )
    REFERENCES студент ( id_студента );

ALTER TABLE группы ADD CONSTRAINT группы_студент_fkv1 FOREIGN KEY ( профорг )
    REFERENCES студент ( id_студента );

ALTER TABLE группы ADD CONSTRAINT группы_студент_fkv2 FOREIGN KEY ( студорг )
    REFERENCES студент ( id_студента );

ALTER TABLE замдекана ADD CONSTRAINT замдекана_физлица_fk FOREIGN KEY ( физлицо )
    REFERENCES физлица ( id_физлица );

ALTER TABLE занятия ADD CONSTRAINT занятия_типызанятий_fk FOREIGN KEY ( тип )
    REFERENCES типызанятий ( id );

ALTER TABLE занятия ADD CONSTRAINT занятия_учебныйплан_fk FOREIGN KEY ( учебныйплан )
    REFERENCES учебныйплан ( id_учплана );

ALTER TABLE кпм ADD CONSTRAINT кпм_типмероприятия_fk FOREIGN KEY ( тип )
    REFERENCES типмероприятия ( id );

ALTER TABLE кпм ADD CONSTRAINT кпм_учебныйплан_fk FOREIGN KEY ( учплан )
    REFERENCES учебныйплан ( id_учплана );

ALTER TABLE куратор ADD CONSTRAINT куратор_группы_fk FOREIGN KEY ( группа )
    REFERENCES группы ( id_группы );

ALTER TABLE куратор ADD CONSTRAINT куратор_физлица_fk FOREIGN KEY ( физлицо )
    REFERENCES физлица ( id_физлица );

ALTER TABLE нир ADD CONSTRAINT нир_дисциплины_fk FOREIGN KEY ( дисциплина )
    REFERENCES дисциплины ( id_дисциплины );

ALTER TABLE нир ADD CONSTRAINT нир_преподаватель_fk FOREIGN KEY ( руководитель )
    REFERENCES преподаватель ( id_преподавателя );

ALTER TABLE нир ADD CONSTRAINT нир_студент_fk FOREIGN KEY ( исполнитель )
    REFERENCES студент ( id_студента );

ALTER TABLE оценки ADD CONSTRAINT оценки_кпм_fk FOREIGN KEY ( кпм )
    REFERENCES кпм ( id );

ALTER TABLE оценки ADD CONSTRAINT оценки_преподаватель_fk FOREIGN KEY ( преподаватель )
    REFERENCES преподаватель ( id_преподавателя );

ALTER TABLE оценки ADD CONSTRAINT оценки_студент_fk FOREIGN KEY ( студент )
    REFERENCES студент ( id_студента );

ALTER TABLE пользователи ADD CONSTRAINT пользователи_роль_fk FOREIGN KEY ( роль )
    REFERENCES роль ( id_роли );

ALTER TABLE пользователи ADD CONSTRAINT пользователи_физлица_fk FOREIGN KEY ( "id _ФизЛица" )
    REFERENCES физлица ( id_физлица );

--  ERROR: FK name length exceeds maximum allowed length(30) 

ALTER TABLE "Посещаемость студентов" ADD CONSTRAINT "Посещаемость студентов_Расписание_FK" FOREIGN KEY ( пара )
    REFERENCES расписание ( id_пары );

--  ERROR: FK name length exceeds maximum allowed length(30) 

ALTER TABLE "Посещаемость студентов" ADD CONSTRAINT "Посещаемость студентов_Студент_FK" FOREIGN KEY ( студент )
    REFERENCES студент ( id_студента );

ALTER TABLE преподаватель ADD CONSTRAINT преподаватель_физлица_fk FOREIGN KEY ( физлицо )
    REFERENCES физлица ( id_физлица );

ALTER TABLE приказы ADD CONSTRAINT приказы_типприказа_fk FOREIGN KEY ( типприказа )
    REFERENCES типприказа ( id );

ALTER TABLE приказы ADD CONSTRAINT приказы_физлица_fk FOREIGN KEY ( физлицо )
    REFERENCES физлица ( id_физлица );

ALTER TABLE приказы ADD CONSTRAINT приказы_физлица_fkv1 FOREIGN KEY ( утвердил )
    REFERENCES физлица ( id_физлица );

ALTER TABLE расписание ADD CONSTRAINT расписание_группы_fk FOREIGN KEY ( группа )
    REFERENCES группы ( id_группы );

ALTER TABLE расписание ADD CONSTRAINT расписание_деньнедели_fk FOREIGN KEY ( деньнедели )
    REFERENCES деньнедели ( id );

ALTER TABLE расписание ADD CONSTRAINT расписание_преподаватель_fk FOREIGN KEY ( преподаватель )
    REFERENCES преподаватель ( id_преподавателя );

ALTER TABLE расписание ADD CONSTRAINT расписание_учебныйплан_fk FOREIGN KEY ( дисциплина )
    REFERENCES занятия ( id_занятия );

ALTER TABLE студент ADD CONSTRAINT студент_группы_fk FOREIGN KEY ( группа )
    REFERENCES группы ( id_группы );

ALTER TABLE студент ADD CONSTRAINT студент_физлица_fk FOREIGN KEY ( физлицо )
    REFERENCES физлица ( id_физлица );

ALTER TABLE студент ADD CONSTRAINT студент_физлица_fkv1 FOREIGN KEY ( мать )
    REFERENCES физлица ( id_физлица );

ALTER TABLE студент ADD CONSTRAINT студент_физлица_fkv2 FOREIGN KEY ( отец )
    REFERENCES физлица ( id_физлица );

ALTER TABLE учебныйплан ADD CONSTRAINT учебныйплан_дисциплины_fk FOREIGN KEY ( дисциплина )
    REFERENCES дисциплины ( id_дисциплины );

ALTER TABLE учебныйплан ADD CONSTRAINT учебныйплан_приказы_fk FOREIGN KEY ( приказ )
    REFERENCES приказы ( id_приказа );

CREATE SEQUENCE группы_id_группы_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER группы_id_группы_trg BEFORE
    INSERT ON группы
    FOR EACH ROW
    WHEN (
        new.id_группы IS NULL
    )
BEGIN
    :new.id_группы := группы_id_группы_seq.nextval;
END;
/

CREATE SEQUENCE деньнедели_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER деньнедели_id_trg BEFORE
    INSERT ON деньнедели
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := деньнедели_id_seq.nextval;
END;
/

CREATE SEQUENCE дисциплины_id_дисциплины_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER дисциплины_id_дисциплины_trg BEFORE
    INSERT ON дисциплины
    FOR EACH ROW
    WHEN (
        new.id_дисциплины IS NULL
    )
BEGIN
    :new.id_дисциплины := дисциплины_id_дисциплины_seq.nextval;
END;
/

CREATE SEQUENCE замдекана_id_замдекана_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER замдекана_id_замдекана_trg BEFORE
    INSERT ON замдекана
    FOR EACH ROW
    WHEN (
        new.id_замдекана IS NULL
    )
BEGIN
    :new.id_замдекана := замдекана_id_замдекана_seq.nextval;
END;
/

CREATE SEQUENCE занятия_id_занятия_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER занятия_id_занятия_trg BEFORE
    INSERT ON занятия
    FOR EACH ROW
    WHEN (
        new.id_занятия IS NULL
    )
BEGIN
    :new.id_занятия := занятия_id_занятия_seq.nextval;
END;
/

CREATE SEQUENCE кпм_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER кпм_id_trg BEFORE
    INSERT ON кпм
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := кпм_id_seq.nextval;
END;
/

CREATE SEQUENCE куратор_id_куратора_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER куратор_id_куратора_trg BEFORE
    INSERT ON куратор
    FOR EACH ROW
    WHEN (
        new.id_куратора IS NULL
    )
BEGIN
    :new.id_куратора := куратор_id_куратора_seq.nextval;
END;
/

CREATE SEQUENCE нир_id_работы_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER нир_id_работы_trg BEFORE
    INSERT ON нир
    FOR EACH ROW
    WHEN (
        new.id_работы IS NULL
    )
BEGIN
    :new.id_работы := нир_id_работы_seq.nextval;
END;
/

CREATE SEQUENCE "Оценки_id Оценки_SEQ" START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER "Оценки_id Оценки_TRG" BEFORE
    INSERT ON оценки
    FOR EACH ROW
    WHEN (
        new."id Оценки" IS NULL
    )
BEGIN
    :new."id Оценки" := "Оценки_id Оценки_SEQ".nextval;
END;
/

CREATE SEQUENCE пользователи_id_пользователя START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER пользователи_id_пользователя BEFORE
    INSERT ON пользователи
    FOR EACH ROW
    WHEN (
        new.id_пользователя IS NULL
    )
BEGIN
    :new.id_пользователя := пользователи_id_пользователя.nextval;
END;
/

CREATE SEQUENCE "Посещаемость студентов_id_Посе" START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER "Посещаемость студентов_id_Посе" BEFORE
    INSERT ON "Посещаемость студентов"
    FOR EACH ROW
    WHEN (
        new.id_посещаемости IS NULL
    )
BEGIN
    :new.id_посещаемости := "Посещаемость студентов_id_Посе".nextval;
END;
/

CREATE SEQUENCE преподаватель_id_преподавателя START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER преподаватель_id_преподавателя BEFORE
    INSERT ON преподаватель
    FOR EACH ROW
    WHEN (
        new.id_преподавателя IS NULL
    )
BEGIN
    :new.id_преподавателя := преподаватель_id_преподавателя.nextval;
END;
/

CREATE SEQUENCE приказы_id_приказа_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER приказы_id_приказа_trg BEFORE
    INSERT ON приказы
    FOR EACH ROW
    WHEN (
        new.id_приказа IS NULL
    )
BEGIN
    :new.id_приказа := приказы_id_приказа_seq.nextval;
END;
/

CREATE SEQUENCE расписание_id_пары_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER расписание_id_пары_trg BEFORE
    INSERT ON расписание
    FOR EACH ROW
    WHEN (
        new.id_пары IS NULL
    )
BEGIN
    :new.id_пары := расписание_id_пары_seq.nextval;
END;
/

CREATE SEQUENCE роль_id_роли_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER роль_id_роли_trg BEFORE
    INSERT ON роль
    FOR EACH ROW
    WHEN (
        new.id_роли IS NULL
    )
BEGIN
    :new.id_роли := роль_id_роли_seq.nextval;
END;
/

CREATE SEQUENCE студент_id_студента_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER студент_id_студента_trg BEFORE
    INSERT ON студент
    FOR EACH ROW
    WHEN (
        new.id_студента IS NULL
    )
BEGIN
    :new.id_студента := студент_id_студента_seq.nextval;
END;
/

CREATE SEQUENCE типмероприятия_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER типмероприятия_id_trg BEFORE
    INSERT ON типмероприятия
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := типмероприятия_id_seq.nextval;
END;
/

CREATE SEQUENCE типприказа_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER типприказа_id_trg BEFORE
    INSERT ON типприказа
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := типприказа_id_seq.nextval;
END;
/

CREATE SEQUENCE типызанятий_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER типызанятий_id_trg BEFORE
    INSERT ON типызанятий
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := типызанятий_id_seq.nextval;
END;
/

CREATE SEQUENCE учебныйплан_id_учплана_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER учебныйплан_id_учплана_trg BEFORE
    INSERT ON учебныйплан
    FOR EACH ROW
    WHEN (
        new.id_учплана IS NULL
    )
BEGIN
    :new.id_учплана := учебныйплан_id_учплана_seq.nextval;
END;
/

CREATE SEQUENCE физлица_id_физлица_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER физлица_id_физлица_trg BEFORE
    INSERT ON физлица
    FOR EACH ROW
    WHEN (
        new.id_физлица IS NULL
    )
BEGIN
    :new.id_физлица := физлица_id_физлица_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            21
-- CREATE INDEX                             0
-- ALTER TABLE                             55
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          21
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         21
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   7
-- WARNINGS                                 0
